# Don't set this! It enables CMAKE_CROSSCOMPILING, which breaks the LLVM build.
# set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_C_COMPILER "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-cc")
set(CMAKE_CXX_COMPILER "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-c++")
set(CMAKE_ASM_COMPILER "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-cc")
# set(CMAKE_LINKER "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-ld")
set(CMAKE_AR "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-ar")
set(CMAKE_RANLIB "${GCC_TOOLCHAIN_ROOT}/bin/${TOOLCHAIN_TRIPLE}-ranlib")

set(CMAKE_C_STANDARD 17)
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_C_COMPILER_TARGET "${TOOLCHAIN_TRIPLE}")
set(CMAKE_CXX_COMPILER_TARGET "${TOOLCHAIN_TRIPLE}")
set(CMAKE_ASM_COMPILER_TARGET "${TOOLCHAIN_TRIPLE}")
            
set(CMAKE_FIND_ROOT_PATH "${GCC_TOOLCHAIN_ROOT}/${TOOLCHAIN_TRIPLE}/sysroot")

set(CMAKE_C_FLAGS "-static-libgcc")
set(CMAKE_CXX_FLAGS "-static-libgcc -static-libstdc++")
set(CMAKE_ASM_FLAGS "")
set(CMAKE_SHARED_LINKER_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "")

if(DEFINED ZLIB_ROOT)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -I${ZLIB_ROOT}/include")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I${ZLIB_ROOT}/include")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-rpath-link,${ZLIB_ROOT}/lib")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath-link,${ZLIB_ROOT}/lib")
endif()

if("${TOOLCHAIN_TRIPLE}" STREQUAL "aarch64-unknown-linux-gnu")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DAT_HWCAP2=26")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAT_HWCAP2=26")
endif()
